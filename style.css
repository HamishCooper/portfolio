/* ===== Reset & variables ===== */
* { box-sizing: border-box; }
html, body { height: 100%; margin: 0; }
body {
  font-family: poppins, system-ui, -apple-system, Segoe UI, Roboto, Helvetica, Arial;
  color: #fff;
  background: #000;
}

:root{
  --pad-x: 5vw;
  --pad-top: 12vh;
  --gap: 28px;
  --radius: 24px;
  --radius-xl: 36px;
  --ticker-h: 84px;
  --muted: rgba(255,255,255,.7);
}
/* desktop padding
@media (min-width: 821px){
  :root{
    --pad-x: 80px;  
  }
}
*/
#info-media video::-webkit-media-controls {
  display: none !important;
}
#info-media video::-moz-media-controls {
  display: none !important;
}

/* ===== Background gradient ===== */
#background-overlay{
  position: fixed; inset: 0;
  background: radial-gradient(120% 120% at -10% -20%, #2c6d84 0%, #3a4962 35%, #6a3b5a 70%, #5a2438 100%);
  z-index: 0;
  transition: height .3s ease;
}

/* ===== Credentials (desktop defaults) ===== */
#credentials{
  position: fixed; top: 40px; left: var(--pad-x);
  z-index: 5000; pointer-events: none;
  transition: opacity .22s, transform .22s;
}
#credentials .name{ font-weight: 500; font-size: 38px; line-height: 1.0; opacity: 0.6; margin-top: 5px;}
#credentials .title{ opacity: .8; font-weight: 300; font-size: 12px; letter-spacing: 1px; margin-top: 1px; }
#credentials .portfolio{ font-weight: 500; font-size: 30px; letter-spacing: 0.5px; margin-top: 10px; text-transform: uppercase;}
body.detail-open #credentials{ transform: translateX(-30%); opacity: 0; pointer-events:none; }

#credentials-br{
  position: fixed; left: var(--pad-x); bottom: calc(var(--ticker-h) + -10px);
  z-index: 5000; opacity: .6; font-size: 8px; letter-spacing: 2px;
  transition: opacity .14s;
}
body.detail-open #credentials-br{ opacity: 0; pointer-events: none; }

/* ===== Back arrow ===== */
#back-arrow{
  position: fixed; top: 20px; left: 0px; z-index: 5200;
  background: transparent; border: 0; color: #2a2a2a; font-size: 33px; line-height: 5px;
  opacity: 0; pointer-events: none; transition: opacity .15s;
  width: 70px;
  height: 36px;
  background: #e3e3e3;
  border-radius: 0 8px 40px 0;  /* top-left, top-right, bottom-right, bottom-left */
  box-shadow: 0 4px 20px rgba(0,0,0,1); /* x-offset, y-offset, blur, color */
}
#back-arrow.visible{ opacity: 0.6; pointer-events: auto; }

/* ===== Content & grid ===== */
#content{ padding: var(--pad-top) 0 var(--ticker-h); }

#grid{
  display: flex; gap: var(--gap);
  overflow-x: auto; overflow-y: hidden;
  scroll-snap-type: x proximity;
  padding: 0 var(--pad-x) 40px;

  flex-wrap: nowrap;
}
#grid::-webkit-scrollbar{ height: 10px; }
#grid > .card{ scroll-snap-align: start; }

/* Column stacks on desktop */
@media (min-width: 821px){
  #grid .col{ 
    display:flex; 
    flex-direction:column-reverse; 
    justify-content:flex-start; 
    gap: var(--gap); 
    width: max-content; }
}

/* Card */
.card{
  position: relative; flex: 0 0 auto;
  border-radius: var(--radius); overflow: hidden; cursor: pointer;
  background: rgba(0,0,0,.12);
  box-shadow: 0 10px 30px rgba(0,0,0,.25);
  transition: border-radius .2s ease, box-shadow .2s ease;
}
.card .media, .card img, .card video{
  position: absolute; inset: 0; width: 100%; height: 100%; object-fit: cover;
}

/* ===== Info panel ===== */
#info-panel{
  position: fixed; inset: 0; z-index: 3000; width: 100%;
  margin: 0; padding: var(--pad-top) var(--pad-x) var(--ticker-h);
  opacity: 0; pointer-events: none;
  transform: translate3d(0, var(--panel-shift), 0);
  transition: opacity .14s ease-out, transform .14s ease-out;
  will-change: transform, opacity;
  backface-visibility: hidden;
  contain: layout paint;
  overflow: auto;
  height: 100vh; height: 100svh; height: 100dvh;
  overscroll-behavior: contain;
}
#info-panel.visible{ opacity: 1; pointer-events: auto; transform: none; }


#info-inner{ display: grid; grid-template-columns: 240px 1fr; gap: 48px; align-items: start; }
#info-media > img, #info-media > video{ width: 200px; height: auto; object-fit: cover; border-radius: 20px; display: block; }
#info-media > img{ width: 200px; height: auto; object-fit: cover; display: block; }

#info-title{ font-size: 56px; font-weight: 600; margin: .2em 0 0; }
#info-subtitle{ font-size: 24px; font-weight: 300; opacity: .9; margin: .2em 0 1em; }
#info-meta{ color: var(--muted); font-size: 13px; text-transform: uppercase; letter-spacing: .5px; margin: 0 0 18px; }
#info-body{ font-size: 18px; line-height: 1.3; letter-spacing: .5px; font-weight: 200; opacity: .7; margin: 0 0 24px; }
#info-blocks > *{ display: block; width: 100%; border-radius: 20px; margin: 18px 0; }

/* Hide gallery in detail mode */
body.detail-open #content{ height: 0; padding: 0; margin: 0; }
body.detail-open #grid{ display: none; }

/* ===== Brand ticker (endless, two-speed, resize-safe) ===== */
#brand-ticker{
  position: fixed; left: 0; right: 0; bottom: 0; height: var(--ticker-h);
  z-index: 5000; overflow: hidden;
  background: linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(0,0,0,.25) 100%);
  border-top: 1px solid rgba(255,255,255,.08);
  transition: opacity .14s;
  /* Per-device speeds in pixels per second */
  --mobile-pps: 30;
  --desktop-pps: 30;
}
/* Track keeps the original background-image for the sprite so JS can read it.
   Animation is disabled; JS drives movement. */
#brand-ticker .track{
  position: absolute; inset: 0;
  background-image: url('images/brand-sprite.png');
  background-repeat: repeat-x; background-size: auto 60%; background-position: 0 50%;
  filter: grayscale(1) brightness(1.2) opacity(.4);
  animation: none;
}

/* Strips are injected by JS for gapless, transform-based motion */
#brand-ticker .ticker-strip{
  position: absolute; top: 50%; transform: translateY(-50%);
  height: calc(var(--ticker-h) * 0.60);
  will-change: transform;
  background-repeat: repeat-x;
  background-size: auto 100%;
}

body.detail-open #brand-ticker{ opacity: 0; pointer-events: none; }

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce){
  #brand-ticker .ticker-strip{ transition: none !important; animation: none !important; }
}

/* ===== Bottom fade (mobile-only, under ticker) ===== */
#bottom-fade{
  position: fixed; left: 0; right: 0; bottom: 0;
  height: 150px; z-index: 4500; pointer-events: none;
  background: linear-gradient(0deg, rgba(0,0,0,0.85) 0%, rgba(0,0,0,0) 100%);
  display: none; /* desktop default: off */
}
body.detail-open #bottom-fade{ display: none; }

/* ===== Scroll modes ===== */
body.base{ overflow-y: hidden; }          /* desktop gallery: no vertical scroll */
body.detail-open{ overflow-y: auto; }
@media (max-width: 820px){
  /* Ensure credits sits to the right of hero */
  
  
 body.base{ overflow-y: auto; } }

/* ===== Mobile (single source of truth) ===== */
@media (max-width: 820px){

  /* Gallery becomes vertical grid */
  #grid{
    display: grid;
    grid-template-columns: 1fr 1fr;
    overflow-y: auto; overflow-x: hidden;
    padding-bottom: calc(var(--ticker-h) + 20px);
  }

  /* Mobile: stack hero then content; no text style changes */
  #info-inner{
    display: grid;
    grid-auto-flow: row;
    grid-template-columns: 1fr !important;
    gap: 20px;
  }

  /* Credentials are in-flow and fully visible on the main screen */
  #credentials{
    position: relative; top: auto; left: auto;
    margin: calc(env(safe-area-inset-top, 0px) + 24px) var(--pad-x) 12px;
    transform: none; opacity: 1; pointer-events: auto;
  }
  #credentials .name{ font-size: 34px; }

  /* Hide credentials only in detail view on mobile */
  body.detail-open #credentials{ display: none; }

  /* Space under credentials so cards never overlap */
  #content{ padding-top: 0; }
  #grid{ margin-top: 22px; }

  /* Show the bottom fade on mobile */
  #bottom-fade{ display: block; }
}

/* Ensure #grid can fade */
#grid{ transition: opacity .18s ease; will-change: opacity; }

/* MOBILE: fade the grid instead of hiding it */
@media (max-width: 820px){
  
  body.detail-open #grid{
    display: block !important;   /* override the global display:none */
    opacity: 0;                  /* fade out */
    pointer-events: none;        /* non-interactive while faded */
  }
}


/* === Desktop: force-pin #grid above ticker with strong specificity === */

@media (min-width: 821px){
  body:not(.detail-open) #content #grid{
    position: fixed !important;
    left: 0 !important;
    right: 0 !important;
    top: 30px !important;   /* pin top */
    bottom: 60px !important;  /* pin bottom */
    height: auto !important;  /* derived from top+bottom */
    max-height: none !important;
    overflow-x: auto;
    overflow-y: visible;                       
  }

  #grid .col{
    overflow: visible;
  }

  body.base #grid .card{
    max-height: none !important;  /* let JS own height */
  }
}

@media (min-width: 821px){
  #grid .col:nth-child(1),
  #grid .col:nth-child(2){
    height: 70%;              /* force the column box to grow/shrink with the grid */
    max-height: 70%;          /* optional; can be omitted */
    align-self: flex-end;     /* keep bottom-aligned */
    overflow: visible;        /* allow spill when at min card size */
  }
}



/* === Mobile masonry override (replaces mobile grid rows) === */

/* 2 columns on phones */
@media (max-width: 820px){
  /* Stop using CSS Grid on mobile */
  #grid{
    display: block !important;
    grid-template-columns: none !important;

    /* Masonry via multi-columns */
    column-count: 2;
    column-gap: var(--gap, 28px);

    overflow-y: auto !important;
    overflow-x: hidden !important;

    /* Keep your existing paddings/margins as needed */
    padding-bottom: calc(var(--ticker-h) + 20px);
  }

  /* Dissolve explicit column wrappers so cards flow into the columns */
  #grid .col{
    display: contents !important;
  }

  /* Ensure each card stays intact within a column and fills width */
  #grid .card{
    display: block;
    width: 100% !important;
    margin-bottom: var(--gap, 28px) ;
    break-inside: avoid;
    -webkit-column-break-inside: avoid;
    -moz-column-break-inside: avoid;
  }
}

/* 3 columns on wider mobile/tablet (no nesting) */
@media (min-width: 660px) and (max-width: 820px){
  #grid{
    column-count: 3;
  }
}



/* debuging */

/* 
#content {
  outline: 2px dashed red;  
}

#grid {
  outline: 2px dashed orange;  
}

#grid .col {
  outline: 2px solid lime;    
  position: relative;        

#grid .card {
  outline: 1px solid cyan;
}
*/
@media (max-width: 820px){
  body.detail-open #content{ height: auto; padding: var(--pad-top) 0 var(--ticker-h); margin: 0; }
}

@media (max-width: 820px){
  body.scroll-lock{ overflow: hidden; }
}



@media (max-width: 820px){
  #content{ overflow-anchor: none; }
}


/* === Info media layout overrides === */

/* Desktop: hero above credits (stacked) */
@media (min-width: 821px){
  #info-media{
    position: sticky;
    top: 0;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
  }
  #info-media > img,
  #info-media > video{
    width: 201px;
    height: auto;
    display: block;
  }
  #credits{
    font-size: 10px;
    line-height: 1.25;
    letter-spacing: .2px;
    opacity: .8;
    margin-top: 8px;
    max-width: 201px;
  
    padding-left: 12px;
    padding-top: 10px;
}
}

/* Mobile: hero left, credits to the right (row) */
@media (max-width: 820px){
  #info-media{
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
    gap: 10px;
  }
  #info-media > img,
  #info-media > video{
    width: 200px;
    height: auto;
    display: block;
  }
  #credits{
    font-size: 10px;
    line-height: 1.25;
    letter-spacing: .2px;
    opacity: .85;
    margin: 2px 0 0 10px;
    max-width: 60%;
    padding-top: 15px;
  }
}



/* Desktop override: ensure the gallery grid remains horizontally scrollable */
@media (min-width: 821px){
  body.base #grid{
    display: flex !important;
    overflow-x: auto !important;
    overflow-y: hidden !important;
    scroll-snap-type: x proximity;
    /* neutralize any accidental multi-column or grid settings */
    column-count: initial !important;
    column-gap: var(--gap) !important;
    grid-template-columns: none !important;
  
    flex-wrap: nowrap !important;
  }
}



/* Ensure rounded corners on the hero, and clip media to the radius */
#info-media .hero-frame{
  border-radius: 20px;
  overflow: hidden; /* crop respects radius */
}

@media (min-width: 821px){
  #info-media .hero-frame{
    border-radius: 20px; /* explicit on desktop too */
    overflow: hidden;
  }
}



/* Desktop: cap block videos to viewport height (scale without cropping) */
@media (min-width: 821px){
  #info-blocks video{
    /* Override the global #info-blocks > * width so height capping takes effect */
    width: auto;
    max-width: 100%;
    height: auto;

    /* Limit to the screen height */
    max-height: 100vh;
    max-height: 100svh;
    max-height: 100dvh;

    /* Keep entire frame visible (no crop) */
    object-fit: contain;
    display: block;
  }
}



/* === Media loading UI === */
.media-wrap, .block-media-wrap, #info-media .hero-frame{
  position: relative;
}
.loading-bar{
  position: absolute;
  left: 50%;
  bottom: 10px;
  width: 100px;
  height: 3px;
  transform: translateX(-50%);
  background: rgba(255,255,255,0.20);
  border-radius: 2px;
  overflow: hidden;
  opacity: 1;
  transition: opacity .25s ease;
  pointer-events: none;
}
.loading-bar .loading-fill{
  height: 100%;
  width: 0%;
  background: rgba(255,255,255,0.80);
  transition: width .2s linear;
}
.media-wrap.loading > img,
.media-wrap.loading > video,
.block-media-wrap.loading > img,
.block-media-wrap.loading > video,
#info-media .hero-frame.loading > img,
#info-media .hero-frame.loading > video{
  opacity: 0;
}



/* Info-panel blocks: proportional scaling + rounding, overriding generic video rules */
#info-blocks > .block-media-wrap{
  border-radius: 20px;
  overflow: hidden;
  width: 100%;
}
#info-blocks > .block-media-wrap > img{
  display: block;
  
  
  
   /* do not crop */
  border-radius: inherit;

  display:block; width:100%; max-width:100%; height:auto; object-fit:contain; border-radius:inherit; }
#info-blocks > .block-media-wrap > video{
  display: block;
  
  
  
   /* do not crop */
  border-radius: inherit;

  display:block; width:auto; max-width:100%; height:auto; object-fit:contain; border-radius:inherit; margin-left:auto; margin-right:auto; }




@media (min-width: 821px){
  /* Let video shrink width when capped by height */
  #info-blocks > .block-media-wrap > video{
    max-height: 100vh;
    max-height: 100svh;
    max-height: 100dvh;
  }
}



/* Mobile width guardrails for card width: keep ~120–200px */
@media (min-width: 476px) and (max-width: 626px){
  #grid{ column-count: 3; }
}
@media (min-width: 627px) and (max-width: 820px){
  #grid{ column-count: 4; }
}



/* Mobile: allow info-panel text and blocks to shrink; prevent overflow */
@media (max-width: 820px){
  /* Grid items default to min-width:auto; let them shrink below min-content */
  #info-inner > *{ min-width: 0 !important; }

  /* The blocks column itself should not impose a floor */
  #info-blocks{ min-width: 0; }

  /* Make sure embedded media and elements never overflow their container */
  #info-blocks img,
  #info-blocks video,
  #info-blocks canvas,
  #info-blocks iframe{
    max-width: 100%;
    height: auto;
  }

  /* Long words/URLs wrap instead of forcing horizontal overflow */
  #info-blocks, #info-blocks *{
    overflow-wrap: anywhere;
    word-break: break-word;
  }
}



/* iOS: nuke any residual WebKit controls on the HERO video (first play) */
#info-media .hero-frame > video::-webkit-media-controls{ display: none !important; }
#info-media .hero-frame > video::-webkit-media-controls-start-playback-button{ display: none !important; }



/* === Credentials: add 80x80 avatar left of name/title; portfolio below === */
#credentials{
  display: grid;
  grid-template-columns: 80px auto;
  grid-auto-rows: min-content;
  column-gap: 20px;              /* 80 + 20 = 100px push */
  align-items: start;
}
/* Avatar via pseudo-element so HTML doesn't need to change */
#credentials::before{
  content: "";
  width: 80px;
  height: 80px;
  background-image: url('images/profileimage.png');
  background-size: cover;
  background-position: center;
  border-radius: 12px;
  grid-column: 1;
  grid-row: 1 / span 2;          /* span name+title height */
}
/* Place name and title in the right column */
#credentials .name{ grid-column: 2; grid-row: 1; }
#credentials .title{ grid-column: 2; grid-row: 2; }
/* Portfolio sits on a new row below, full width */
#credentials .portfolio{ grid-column: 1 / -1; grid-row: 3; }


/* === Credentials: Avatar + name/title + labels === */
#credentials{
  display: grid;
  grid-template-columns: 80px 170px auto;  /* changed to allow 2 label columns */
  grid-auto-rows: min-content;
  column-gap: 20px;
  align-items: start;
}

#credentials .name{ grid-column: 2 / span 2; grid-row: 1; }
#credentials .title{ grid-column: 2 / span 2; grid-row: 2; }

#credentials .portfolio,
#credentials .me{
  font-weight: 500;
  font-size: 30px;
  letter-spacing: 0.5px;
  margin-top: 10px;
  text-transform: uppercase;
}

#credentials .portfolio{ grid-column: 2; grid-row: 3; }
#credentials .me{ grid-column: 3; grid-row: 3; }

/* Credentials: make ME a link but keep typography */
#credentials .me .me-link{
  color: inherit;
  text-decoration: none;
  opacity: .4;           /* default lower emphasis */
  pointer-events: auto;  /* ensure clickability even if parent is non-interactive */
  cursor: pointer;
}
/* When ME page is open, show full emphasis */
body.me-open #credentials .me .me-link{ opacity: 1; }

/* Hide the grid when ME is open, like card detail */
body.me-open #grid{ display: none; }

/* Start ME info panel lower so credentials remain visible */
body.me-open #info-panel{
  padding-top: calc(var(--pad-top) + 140px);
}

/* Credentials: make PORTFOLIO a link and clickable */
#credentials .portfolio .portfolio-link{
  color: inherit;
  text-decoration: none;
  pointer-events: auto;
  cursor: pointer;
}

/* When ME is open, dim PORTFOLIO */
body.me-open #credentials .portfolio .portfolio-link{ opacity: .4; }

/* Ensure all grid/column containers are hidden when ME is open (desktop & mobile) */
body.me-open #grid,
body.me-open #grid > .col,
body.me-open #grid .col,
body.me-open #grid .columns,
body.me-open .columns,
body.me-open #gallery,
body.me-open #rail,
body.me-open #scroller{ display: none !important; }
